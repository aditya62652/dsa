#include<iostream>
using namespace std;
int firstoccur(int arr[],int n,int key){
    int s=0;
    int e=n-1;
    int ans=-1;
    int mid=s+(e-s)/2;
    while(s<=e){
        if(arr[mid]==key){
            ans=mid;
          e=mid-1;
        }
        if(key>arr[mid]){
            s=mid+1;
        }
        else{
            e=mid-1;
        }
        mid=s+(e-s)/2;
    }
    return ans;
}
int lastoccur(int arr[],int n,int key){
    int s=0;
    int e=n-1;
    int ans=-1;
    int mid=s+(e-s)/2;
    while(s<=e){
        if(arr[mid]==key){
            ans=mid;
            s=mid+1;
        }
        if(key>arr[mid]){
            s=mid+1;
        }
        else if(key<arr[mid]){
            e=mid-1;
        }
        mid=s+(e-s)/2;
    }
    return ans;
}
int main(){
    int even[7]={1,2,4,4,4,5,7};
    int first=firstoccur(even,7,4);
    cout<<first<<" ";
    int last=lastoccur(even,7,4);
    cout<<last<<" ";
    return 0;
}
2  4

#include<iostream>
using namespace std;
int peak(int arr[],int n){
    int s=0;
    int e=n-1;
    int mid=s+(e-s)/2;
    while(s<e){
        if(arr[mid]<arr[mid+1]){
            s=mid+1;
        }
        else{
            e=mid;
        }
        mid=s+(e-s)/2;
    }
    return e;
}
int main(){
    int arr[5]={5,7,1,2};
    int ans=peak(arr,4);
    cout<<"the element is peak at given index "<<ans<<" ";
    return 0;
}
the element is peak at given index 1 
