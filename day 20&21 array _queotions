#include<iostream>
using namespace std;
void merge(int arr1[],int n,int arr2[],int m,int arr3[]){
    int i=0, j=0;
    int k=0;
    while(i<n&& j<m){
        if(arr1[i]<arr2[j]){
            arr3[k++]=arr1[i++];
        }
        else{
            arr3[k++]=arr2[j++];
        }
    }
    while(i<n){
    arr3[k++]=arr1[i]++;
}
while(j<m){
    arr3[k++]=arr2[j++];
}
}

void print(int ans[],int n){
    for(int i=0;i<n;i++){
        cout<<ans[i]<<" ";
    }
    cout<<endl;
}
int main(){
    int arr1[5]={2,3,4,5,6};
    int arr2[3]={1,7,8};
    int arr3[8]={0};
    merge( arr1,5,arr2,3, arr3);
    cout<<"printing the merge array"<<endl;
    print(arr3,8);
    
}
printing the merge array
1 2 3 4 5 6 7 8
#include<iostream>
using namespace std;
void reverse(int arr[],int n){
    int s=0;
    int e=n-1;
    while(s<=e){
        swap(arr[s],arr[e]);
            s++;
            e--;
        
    }
}
void print(int arr[],int n){
    for(int i=0;i<n;i++){
        cout<<arr[i]<<" ";
    }
    cout<<endl;
}
int main(){
    int arr1[6]={1,4,5,7,8,9};
    reverse(arr1,6);
    cout<<"printing reverse array"<<endl;
    print(arr1,6);
}
printing reverse array
9 8 7 5 4 1
class Solution {
public:
    void moveZeroes(vector<int>& nums) {
        int i=0;
        for(int j=0;j<nums.size();j++){
            if(nums[j]!=0){
                swap(nums[j],nums[i]);
                i++;
            }
        }
        
    }
};
our input
[0,1,0,3,12]
Output
[1,3,12,0,0]
Diff
Expected
[1,3,12,0,0]

